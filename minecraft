#!/bin/bash
# /etc/init.d/minecraft

### BEGIN INIT INFO
# Provides:   minecraft
# Required-Start: $local_fs $remote_fs
# Required-Stop:  $local_fs $remote_fs
# Should-Start:   $network
# Should-Stop:    $network
# Default-Start:  2 3 4 5
# Default-Stop:   0 1 6
# Short-Description:    Minecraft server
# Description:    Init script for minecraft/bukkit server, with rolling logs and use of ramdisk for less lag. 
### END INIT INFO

### Based on http://www.minecraftwiki.net/wiki/Server_startup_script


# Name of server.jar file
SERVICE='craftbukkit-0.0.1-SNAPSHOT.jar'
# User that should run the server
USERNAME="v"
# Path to minecraft directory 
MCPATH="/home/${USERNAME}/server"
CPU_COUNT=2
# Change the values of -Xmx###M and -Xms###M to how much ram you want to give to the
# server. Remember to give the ramdisk enough space. Subtract from the total amount 
# of RAM available the size of your map and the RAM-consumption of your base system.
INVOCATION="java -Xmx760M -Xms760M -XX:+UseConcMarkSweepGC -XX:+CMSIncrementalPacing -XX:ParallelGCThreads=$CPU_COUNT -XX:+AggressiveOpts -jar $SERVICE nogui"
# Where the world backups should go
BACKUPPATH="/home/${USERNAME}/backups/world"
# Where the logs are copied when running log-roll 
LOGPATH="/home/${USERNAME}/backups/logs"
# Where the whole minecraft directory is copied when whole-backup is runned
WHOLEBACKUP="/home/${USERNAME}/backups/server"
# Where the world is located on the disk
WORLDSTORAGE="/home/${USERNAME}/server/diskworld"
#Path to the the mounted ramdisk default in Ubuntu: /dev/shm
RAMDISK='/dev/shm'


ME=`whoami`
as_user() {
	if [ $ME == $USERNAME ] ; then
		bash -c "$1"
	else
		su - $USERNAME -c "$1"
	fi
}
datepath() {
	echo $1`date +%FT%T`$3
}
mc_start() {
	if ps ax | grep -v grep | grep -v -i SCREEN | grep $SERVICE > /dev/null
	then
		echo "Tried to start but $SERVICE was already running!"
	else
		echo "$SERVICE was not running... starting."
		# rsync -tr $MCPATH/world-disc /dev/shm/
		cd $MCPATH
		as_user "cd $MCPATH && screen -dmS minecraft $INVOCATION"
		sleep 7
		if ps ax | grep -v grep | grep -v -i SCREEN | grep $SERVICE > /dev/null
		then
			echo "$SERVICE is now running."
		else
			echo "Could not start $SERVICE."
		fi
	fi
}

mc_saveoff() {
	if ps ax | grep -v grep | grep -v -i SCREEN | grep $SERVICE > /dev/null
	then
		echo "$SERVICE is running... suspending saves"
		as_user "screen -p 0 -S minecraft -X eval 'stuff \"save-off\"\015'"
		as_user "screen -p 0 -S minecraft -X eval 'stuff \"save-all\"\015'"
		sync
		sleep 10
	else
		echo "$SERVICE was not running. Not suspending saves."
	fi
}

mc_saveon() {
	if ps ax | grep -v grep | grep -v -i SCREEN | grep $SERVICE > /dev/null
	then
		echo "$SERVICE is running... re-enabling saves"
		as_user "screen -p 0 -S minecraft -X eval 'stuff \"save-on\"\015'"
	else
		echo "$SERVICE was not running. Not resuming saves."
	fi
}

mc_stop() {
	if ps ax | grep -v grep | grep -v -i SCREEN | grep $SERVICE > /dev/null
	then
		echo "$SERVICE is running... stopping."
		as_user "screen -p 0 -S minecraft -X eval 'stuff \"save-all\"\015'"
		sleep 10
		as_user "screen -p 0 -S minecraft -X eval 'stuff \"stop\"\015'"
		sleep 7
	else
		echo "$SERVICE was not running."
	fi
	if ps ax | grep -v grep | grep -v -i SCREEN | grep $SERVICE > /dev/null
	then
		echo "$SERVICE could not be shut down... still running."
	else
		echo "$SERVICE is shut down."
	fi
}
log_roll() {
        echo "Rolling minecraft server logs"
	path=`datepath $LOGPATH/logs/server_ .log.gz .log`
	as_user "mv $MCPATH/server.log $path && gzip $path"
}
mc_whole_backup() {
        echo "Backing up minecraft server folder"
	path=`datepath $WHOLEBACKUP/mine_`
	as_user "cp -r $MCPATH $path"
}
mc_world_backup() {
	TODAY=`date +%F`
	if [ ! -e $BACKUPPATH/$TODAY ]
		then
		as_user "mkdir $BACKUPPATH/$TODAY"
	fi
	echo "Backing up minecraft world"
	path=`datepath $BACKUPPATH/$TODAY/world_ .tar.bz2 .tar.bz2`
	as_user "tar -hcjf $path $MCPATH/world"
	echo "Backing up nether world"
	path=`datepath $BACKUPPATH/$TODAY/world_nether_ .tar.bz2 .tar.bz2`
	as_user "tar -hcjf $path $MCPATH/world_nether"
}
to_ram() {
	if [ -L $MCPATH/world ]
	then
		as_user "rsync -rt $WORLDSTORAGE/ $RAMDISK/world"
		echo "World copied to ram"
	fi
}
to_disk() {
	as_user "rsync -rt $MCPATH/world/ $WORLDSTORAGE"
	echo "World copied to disk"
}

mc_update() {
        if ps ax | grep -v grep | grep -v -i SCREEN | grep $SERVICE > /dev/null
                then
                        echo "$SERVICE is running! Will not start update."
        else
                ### update minecraft_server.jar
                echo "Updating minecraft_server.jar...."
                MC_SERVER_URL=http://minecraft.net/`wget -q -O - http://www.minecraft.net/download.jsp | grep minecraft_server.jar\</a\> | cut -d \" -f 2`
                as_user "cd $MCPATH && wget -q -O $MCPATH/minecraft_server.jar.update $MC_SERVER_URL"
                if [ -f $MCPATH/minecraft_server.jar.update ]
                        then    
                                if `diff $MCPATH/minecraft_server.jar $MCPATH/minecraft_server.jar.update >/dev/null`
                                        then    
                                        echo "You are already running the latest version of the Minecraft server."
                                        as_user "rm $MCPATH/minecraft_server.jar.update"
                                else    
                                        as_user "mv $MCPATH/minecraft_server.jar.update $MCPATH/minecraft_server.jar"
                                        echo "Minecraft successfully updated."
                                fi      
                else    
                        echo "Minecraft update could not be downloaded."
                fi      

                ### update craftbukkit
                echo "Updating craftbukkit...."
                as_user "cd $MCPATH && wget -q -O $MCPATH/craftbukkit.jar.update http://ci.bukkit.org/job/dev-CraftBukkit/promotion/latest/Recommended/artifact/target/craftbukkit-0.0.1-SNAPSHOT.jar"
                if [ -f $MCPATH/craftbukkit.jar.update ]
                        then    
                                if `diff $MCPATH/craftbukkit-0.0.1-SNAPSHOT.jar $MCPATH/craftbukkit.jar.update > /dev/null`
                                        then    
                                        echo "You are already running the latest version of CraftBukkit."
                                        as_user "rm $MCPATH/craftbukkit.jar.update"
                                else    
                                        as_user "mv $MCPATH/craftbukkit.jar.update $MCPATH/craftbukkit-0.0.1-SNAPSHOT.jar"
                                        echo "CraftBukkit successfully updated."
                                fi      
                else    
                        echo "CraftBukkit update could not be downloaded."
                fi      
        fi      
}


case "$1" in
	start)
		# Starts the server
		to_ram
		mc_start
		;;
	stop)
		# Stops the server
		as_user "screen -p 0 -S minecraft -X eval 'stuff \"say SERVER SHUTTING DOWN!\"\015'"
		mc_stop
		to_disk
		;;
	restart)
		# Restarts the server
		as_user "screen -p 0 -S minecraft -X eval 'stuff \"say SERVER REBOOT IN 10 SECONDS.\"\015'"
		mc_stop
		mc_start
		;;
        update)
                #update minecraft_server.jar and craftbukkit.jar
                as_user "screen -p 0 -S minecraft -X eval 'stuff \"say SERVER REBOOT/UPDATE IN 10 SECONDS.\"\015'"
                mc_stop
                mc_whole_backup
                mc_update
                mc_start
                ;;
	backup)
		# Backups world
		as_user "screen -p 0 -S minecraft -X eval 'stuff \"say Backing up world.\"\015'"
		mc_saveoff
		to_disk
		mc_world_backup
		mc_saveon
		as_user "screen -p 0 -S minecraft -X eval 'stuff \"say Backup complete.\"\015'"
		;;
	whole-backup)
		# Backups everything
		mc_saveoff
		to_disk
		mc_whole_backup
		mc_saveon
		;;
	to-disk)
		# Writes from the ramdisk to disk, in case the server crashes. 
		# Using ramdisk speeds things up a lot, especially if you allow
		# teleportation on the server.
		mc_saveoff
		to_disk
		mc_saveon
		;;
	connected)
		# Lists connected users
		as_user "screen -p 0 -S minecraft -X eval 'stuff list\015'"
		sleep 3s
		tac $MCPATH/server.log | grep -m 1 "Connected"
		;;
	log-roll)
		# Moves and Gzips the logfile, a big log file slows down the
		# server A LOT (what was notch thinking?)
		as_user "screen -p 0 -S minecraft -X eval 'stuff \"say ROUTINE REBOOT IN 10 SECONDS.\"\015'"
		mc_stop
		log_roll 
		mc_start
		;;
	status)
		# Shows server status
		if ps ax | grep -v grep | grep -v -i SCREEN | grep $SERVICE > /dev/null
		then
			echo "$SERVICE is running."
		else
			echo "$SERVICE is not running."
		fi
		;;

	*)
		echo "Usage: /etc/init.d/minecraft {start|stop|backup|whole-backup|update|log-roll|to-disk|connected|status|restart}"
		exit 1
		;;
esac

exit 0
